# This is a basic workflow to help you get started with Actions

name: CD_dev_sql_auto_workflow 

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch

on:
  push:
    # file paths to consider in the event. Optional; defaults to all.
    branches:  
      - dev    
    paths:
      - '**wks-devops_az_sql/mssql-db/arm**'
      - '**wks-devops_az_sql/db-integrationtests/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a twos job called "sql-build" & "sql-deploy"
  sql-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      ENV: dev
      LOCATION: westeurope
      EDITION: free

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: CLI Creating Resource Group
        run: |
          az group create -l westeurope -n wks-devopsql-${{ env.ENV }}-rg

      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }} 
          resourceGroupName: wks-devopsql-${{ env.ENV }}-rg
          template: wks-devops_az_sql/mssql-db/arm/azuredeploy.json
          parameters: 'serverName="wksdevopsql-sql-${{ env.ENV }}" sqlDBName="wksdevopsql-db-${{ env.ENV }}" location="${{ env.LOCATION }}" administratorLogin=${{ secrets.SQL_SA_USER }} administratorLoginPassword=${{ secrets.SQL_SA_PASSWORD }} databaseEdition="${{ env.EDITION }}" env="${{ env.ENV }}"'

          # Upload ARM Template as artifact for future Ref.   
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        if: ${{always()}}
        with:
          name: 'ARM Template'
          path: wks-devops_az_sql/mssql-db/arm/azuredeploy.json


  sql-integtest:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101  
    
      # restore dependencies  
    - name: Install dependencies
      run: dotnet restore wks-devops_az_sql/mssql-db/db-integrationtests

      # build project
    - name: Build
      run: dotnet build wks-devops_az_sql/mssql-db/db-integrationtests --configuration Release --no-restore

    - name: set pr build number (if pr)
      id: PRNUMBER
      if: ${{ github.event_name == 'pull_request' }}
      uses: kkak10/pr-number-action@v1.3
      
      # set report file and title 
    - name: Set Test Title
      run: | 
            if ${{ github.event_name == 'pull_request' }}
            then
              echo "::set-env name=title::Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})"
              echo "::set-env name=file_name::TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md"
            else
              echo "::set-env name=title::Test Run ${{github.run_number}}"
              echo "::set-env name=file_name::TestReport.${{github.run_number}}.md"
            fi

      # set report file and title
    - name: Set Test Env Variables 
      run: |
        "echo "TestUser=${{ secrets.SQL_SA_USER }}" >> $GITHUB_ENV"
        "echo "TestPassword=${{ secrets.SQL_SA_PASSWORD }}" >> $GITHUB_ENV"
        "echo "TestHost=wksdevopsql-sql-${{ env.ENV }}.database.windows.net,1433" >> $GITHUB_ENV" 
    - name: Test
      run: dotnet test wks-devops_az_sql/mssql-db/db-integrationtests --no-restore --no-build --configuration $config --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"


    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: 'Test Run'
        path: ${{github.workspace}}/${{env.file_name}}
    
    - name: comment PR   
      uses: machine-learning-apps/pr-comment@master
      if: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        path: ${{env.file_name}}