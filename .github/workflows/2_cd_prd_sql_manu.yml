# This is a basic workflow that is manually triggered

name: 2_CD_PRD_SQL_MANU

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

  # workflow_run:
  #   workflows: ["1_CD_STG_SQL_AUTO"]
  #   branches: [stg]
  #   types: 
  #     - completed

jobs:
  # This workflow contains a twos job called "sql-build" & "sql-deploy"
  sql-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      ENV: prd
      LOCATION: westeurope
      EDITION: standard

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: CLI Creating Resource Group
        run: |
          az group create -l westeurope -n wks-devopsql-${{ env.ENV }}-rg

      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: wks-devopsql-${{ env.ENV }}-rg
          template: wks-devops_az_sql/mssql-db/arm/azuredeploy.json
          parameters: 'serverName="wksdevopsql-sql-${{ env.ENV }}" sqlDBName="wksdevopsql-db" location="${{ env.LOCATION }}" administratorLogin=${{ secrets.SQL_SA_USER }} administratorLoginPassword=${{ secrets.SQL_SA_PASSWORD }} databaseEdition="${{ env.EDITION }}" env="${{ env.ENV }}"'
      
  sql-test:
    needs: [sql-deploy]
    runs-on: ubuntu-latest

    env:
      ENV: prd
      config: 'Release'

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101  
    
      # restore dependencies  
    - name: Install dependencies
      run: dotnet restore wks-devops_az_sql/mssql-db/db-integrationtests

      # build project
    - name: Build
      run: dotnet build wks-devops_az_sql/mssql-db/db-integrationtests --configuration ${{ env.config }} --no-restore

    - name: set pr build number (if pr)
      id: PRNUMBER
      if: ${{ github.event_name == 'pull_request' }}
      uses: kkak10/pr-number-action@v1.3
      
      # set report file and title 
    - name: Set Test Title
      run: | 
            if ${{ github.event_name == 'pull_request' }}
            then
              echo "title=Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
              echo "file_name=TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV
            else
              echo "title=Test Run ${{github.run_number}}" >> $GITHUB_ENV
              echo "file_name=TestReport.${{github.run_number}}.md" >> $GITHUB_ENV
            fi

      # set report file and title
    - name: Set Test Env Variables 
      run: |
        echo "TestUser=${{ secrets.SQL_SA_USER }}" >> $GITHUB_ENV
        echo "TestPassword=${{ secrets.SQL_SA_PASSWORD }}" >> $GITHUB_ENV
        echo "TestHost=wksdevopsql-sql-${{ env.ENV }}.database.windows.net,1433" >> $GITHUB_ENV 
        echo "TestDatabase=wksdevopsql-db" >> $GITHUB_ENV 
    - name: Test
      run: dotnet test wks-devops_az_sql/mssql-db/db-integrationtests --no-restore --no-build --configuration ${{ env.config }} --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: 'Integration_Test_Results'
        path: ${{github.workspace}}/${{env.file_name}}
